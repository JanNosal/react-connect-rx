{"version":3,"file":"Introduction.stories-332e557a.js","sources":["../../src/stories/Introduction.stories.mdx"],"sourcesContent":["import { Meta } from '@storybook/addon-docs/blocks';\n\n<Meta\n  title='Introduction'\n  parameters={{\n    viewMode: 'docs',\n  }}\n/>\n\n# react-connect-rx\n> Connect React with RxJS\n\nThis simplistic library provides a few higher order components and hooks to connect React component with RxJS.\n\n[![NPM](https://img.shields.io/npm/v/react-connect-rx.svg)](https://www.npmjs.com/package/react-connect-rx) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n## Install\n\nnpm\n```bash\nnpm install --save react-connect-rx\n```\nyarn\n```bash\nyarn add react-connect-rx\n```\n\n## API\n\n> ### useSubscribe\n\n#### type signature\nIt takes initial state in the first argmment list,\nobservalbe to subcribe in the second one\nand return current state produced by the observable.\n\n```ts\nimport {Observable} from 'rxjs'\n\nexport type UseSubscribe =\n  <T>(init: T) => (observable: Observable<T>) => T\n```\n\n#### usage\n```ts\nimport {useSubscribe} from 'react-connect-rx'\nimport {Observable} from 'rxjs'\n\nconst count$ = interval(1000)\n\nconst Conter = () => {\n    const count = useSubscribe(0)(count$)\n    return <div>{count}</div>\n}\n```\n\n> ### updateWithRx\n\n#### type signature\n```ts\nimport React, {ComponentType, ComponentClass} from 'react'\nimport {Observable} from 'rxjs'\n\nexport type UpdateWithRx =\n<P extends Object>\n  (Cmp: ComponentType<P>) =>\n    (obs: Array<Observable<Partial<P>>>) =>\n      ComponentClass<P, P>\n```\n\n#### usage\n```js\nimport ReactDOM from 'react-dom';\nimport {updateWithRx} from 'react-connect-rx'\n\nconst Counter = ({count}) =>\n        <div>{count}</div>\n\nconst count$ = interval(1000).pipe(\n    map(count => ({count}))\n)\n\nconst observables = [count$]\n\nconst UpdatingCounter = updateWithRx(Counter)(observables)\n\nReactDOM.render(\n  <UpdatingCounter count={0} />,\n  document.getElementById('root')\n);\n\n```\n\n> ### connectRx\n\n#### type signature\n```ts\nimport React, {ComponentType, FunctionComponent} from 'react'\nimport {Observable} from 'rxjs'\n\nexport type ConnectRx =\n<P extends Object>\n  (obs: Observable<Partial<P>>[]) =>\n    (props: P) =>\n      (Cmp: ComponentType<P>) =>\n        FunctionComponent\n```\n\n#### usage\n```tsx\nimport ReactDOM from 'react-dom';\nimport {connectRx} from 'react-connect-rx'\n\nconst Counter = ({count}) =>\n        <div>{count}</div>\n\nconst count$ = interval(1000).pipe(\n    map(count => ({count}))\n)\n\nconst observables = [count$]\n\nconst props = {\n    count: 0\n}\n\n// If you are using typescript, you might need to annotate by the type of props.\n// The whole type signature is based on the type of the props and\n// since props are comming in the second argument list,\n// compiler is unable to infer the type for the first arguments list.\n// connectRx<{count: number}>(observables)(props)(Counter)\nconst ConnectedCounter = connectRx(observables)(props)(Counter)\n\nReactDOM.render(\n  <ConnectedCounter />,\n  document.getElementById('root')\n);\n\n```\n\n## Notes\nIn the arguments list, which accepts the array of observables,\nyou can pass any number of observables.\nThese can update the same subgroup of props, a different one,\nor an interception. See more in the examples.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"iWAKA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,WAAY,aACZ,EAAG,IACH,EAAG,IACH,IAAK,MACL,GAAI,KACJ,IAAK,MACL,KAAM,OACN,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAoBG,EAAMC,EAAW,CACnC,SAAU,CAAcC,EAAKC,EAAM,CACjC,MAAO,eACP,WAAY,CACV,SAAU,MACX,CACF,CAAA,EAAG;AAAA,EAAmBD,EAAKJ,EAAY,GAAI,CAC1C,GAAI,mBACJ,SAAU,kBACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,WAAY,CACnD,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CAChD,SAAU,yBACX,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,gHACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAcI,EAAKJ,EAAY,EAAG,CAC1C,KAAM,iDACN,OAAQ,SACR,IAAK,+BACL,SAAuBI,EAAKJ,EAAY,IAAK,CAC3C,IAAK,oDACL,IAAK,KACf,CAAS,CACF,CAAA,EAAG,IAAkBI,EAAKJ,EAAY,EAAG,CACxC,KAAM,yBACN,OAAQ,SACR,IAAK,+BACL,SAAuBI,EAAKJ,EAAY,IAAK,CAC3C,IAAK,mEACL,IAAK,wBACf,CAAS,CACT,CAAO,CAAC,CACH,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,UACJ,SAAU,SACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,KACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,gBACX,SAAU;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,MACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,gBACX,SAAU;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,MACJ,SAAU,KACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,WAAY,CACnD,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CACjD,GAAI,eACJ,SAAU,cACX,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,iBACJ,SAAU,gBACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU;AAAA;AAAA,qDACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,QACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,WAAY,CACnD,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CACjD,GAAI,eACJ,SAAU,cACX,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,mBACJ,SAAU,gBACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,UACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,WAAY,CACnD,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CACjD,GAAI,YACJ,SAAU,WACX,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,mBACJ,SAAU,gBACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,UACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,QACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU;AAAA;AAAA;AAAA,8CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASM,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASQ,CACb,EAAM,OAAO,OAAO,CAAE,EAAEN,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOQ,EAAyBH,EAAKG,EAAW,CAC9C,GAAGR,EACH,SAAuBK,EAAKN,EAAmB,CAC7C,GAAGC,CACT,CAAK,CACL,CAAG,EAAID,EAAkBC,CAAK,CAC9B,CAEY,MAACS,EAAS,IAAM,CAC1B,MAAM,IAAI,MAAM,iBAAiB,CACnC,EACAA,EAAO,WAAa,CAClB,SAAU,EACZ,EACK,MAACC,EAAgB,CACpB,MAAO,eACP,WAAY,CACV,SAAU,MACX,EACD,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,QAAQ,CAC3B,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAC9B,GAAIA,EAAc,WAAW,MAAQ,GACrC,KAAMH,CACR,EAC4B,MAAAI,EAAA,CAAA,QAAA"}